#!/usr/bin/perl
#############################################################################
# Copyright Â© 2006-2010 Six Apart Ltd.
# This program is free software: you can redistribute it and/or modify it
# under the terms of version 2 of the GNU General Public License as published
# by the Free Software Foundation, or (at your option) any later version.
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details.  You should have received a copy of the GNU
# General Public License version 2 along with this program. If not, see
# <http://www.gnu.org/licenses/>

package SphinxSearch::GenSphinxPipe;
use lib qw( lib extlib );

# use MT::Util qw( encode_xml );
use base qw( MT::Tool );
use strict;
use warnings;

my $verbose;

my @SUPPORTED_CLASSES = qw( Blog Author Comment Entry Tag );
my @SUPPORTED_INDICES = qw( main delta );

my $index_type;
my $datasource;

sub options {
    return (
        'verbose+'	=> \$verbose,
        'type=s'	=> \$index_type,
        'ds=s'		=> \$datasource
    );
}

sub main {
    my $self = shift;
    ($verbose) = $self->SUPER::main(@_);

	my $joint_ds = join('|', @SUPPORTED_CLASSES);
	my $joint_idx = join('|', @SUPPORTED_INDICES);
	
	die "Unsupported datasource: $datasource not in $joint_ds\n" if($datasource !~ /($joint_ds)/ig );
	die "Unsupported index: $index_type not in $joint_idx\n" if($index_type !~ /($joint_idx)/i );
	
    require MT::Request;
    my $r = MT::Request->instance;
    $r->stash( 'index_class', $datasource );
    $r->stash( 'index_type', $index_type );

    require SphinxSearch::Config;
    my $tmpl = SphinxSearch::Config->_get_sphinx_xml_stream();
    my $str  = $tmpl->output;
    print "$str\n";
}

__PACKAGE__->main unless caller;
